一、几种分拆部分执行的方法
ansible-playbook -i production site.yml --tags ntp : 指定plays或tags为ntp的task执行
ansible-playbook -i production webservers.yml --limit boston ：指定host为boston的执行


疑问：hosts: bastion[0]这个从哪活得的？facts用来干嘛？
bastion用于连接unreached host，也就是需要通过跳板机连接。

二、参数含义
ssh 连接
ansible_host：使用主机的名称去连接，可以使用别名

ansible_port：如果默认不是22的话，要定义ssh的端口号

ansible_user：默认ssh连接用户

ansible_ssh_pass：默认ssh 连接的passwd（不要在这里出现明文密码，而是要使用vault）

ansible_ssh_private_key_file：连接时使用私钥文件。如果不想使用ssh代理的话，可以有多个密钥

ansible_ssh_common_args：该设置将总是为sftp,scp,ssh附加到命令行，可用于为某个主机或组配置ProxyCommand

ansible_sftp_extra_args：该设置将sftp附加到命令行

ansible_scp_extra_args：该设置将scp附加到命令行

ansible_ssh_extra_args：该设置将ssh附件到命令行

ansible_ssh_pipelining：决定是否使用ssh 管道，它将覆盖ansible.cfg中的pipelining设置

疑问：ssh管道用来做什么？
SSH pipelining 是一个加速 Ansible 执行速度的简单方法。ssh pipelining 默认是关闭，之所以默认关闭是为了兼容不同的 sudo 配置，主要是 requiretty 选项。如果不使用 sudo，建议开启。
打开此选项可以减少 ansible 执行没有传输时 ssh 在被控机器上执行任务的连接数。不过，如果使用 sudo，必须关闭 requiretty 选项。

2.2版本后的特性.
ansible_ssh_executable：这个设置将覆盖使用系统ssh的默认行为。它将覆盖ansible.cfg中的ssh_executable设置
使用特权命令（如sudo）
ansible_become：允许升级权限，相当于 ansible_sudo 或者 ansible_su

ansible_become_method：允许设置特殊权限的方法

ansible_become_user：允许设置特殊权限的用户，相当于 ansible_sudo_user 或者 ansible_su_user

ansible_become_pass：允许设置特殊权限的密码（不要在这里直接输入明文），相当于 ansible_sudo_pass 或者 ansible_su_pass

三、role分析
基于kubespray的cluster.yml文件顺序进行分析

role依赖顺序：
kubespray-defaults------------->download
kubernetes/preinstall --------->adduser
container-engine  -------------->container-engine/docker------>container-engine/docker-storage
etcd --------------------> adduser
kubernetes/node -----------------> kubernetes/secrets
network_plugin -----------------> network_plugin/calico
kubernetes-apps/policy_controller ------------------------> policy_controller/calico
kubernetes-apps/ingress_controller -----------------------> kubernetes-apps/ingress_controller/ingress_nginx
                                                            kubernetes-apps/ingress_controller/cert_manager
kubernetes-apps/external_provisioner ----------------->  kubernetes-apps/external_provisioner/local_volume_provisioner
                                                         kubernetes-apps/external_provisioner/cephfs_provisioner

kubespray-defaults：基本所有节点都会执行download_prep.yml
     tasks:
      download_prep.yml:创建目录
      download_container.yml --------> set_docker_image_facts.yml : 设置images参数，下载images；
      疑问： 通过docker inspect -f $(docker images -q)获取image信息，初始的image哪里来？
bootstrap-os：初始化系统配置
kubernetes/preinstall：安装证书及各种K8S相关准备工资
adduser：创建用户和用户组
container-engine
container-engine/docker：启动docker
container-engine/docker-storage： 安装docker-storage-setup
etcd：启动etcd

 知识点：ansible常用的几个模块，具体的方法（待了解）
   ansible-doc -s  module_name ：获取指定模块的使用信息 
        copy模块
          -a 'dest= ( 远程主机上路径 )  src= ( 本地主机路径 )   content= ( 直接指明内容 )  owner=  group=  mode=' 
            目的：拷贝src到dest
            命令：ansible test-m copy -a 'src=/root/.ssh/id_rsa.pub dest=/root'
        file模块
          -a 'path=  mode= owner= group= state={file|directory|link|hard|touch|absent} src= (link ，链接至何处 ) ' 
          目的：更改指定节点上/tmp/t.sh的权限为755，属主和属组为root
          命令：ansible all -m file -a "dest=/tmp/t.sh mode=755 owner=root group=root"
        cron模块
          -a  'name= state=  minute=  hour= day= month=  weekday= job='
        group模块 
          -a 'name= state={present|absent}  gid=  system= ( 系统组 ) '
        user模块 
           -a 'name=  state={present ( 创建 ) |absent ( 删除 ) }  force= ( 是否强制操作删除家目录 )   system=  uid=  shell= home=' 
        yum模块 
          -a 'name=  conf_file= ( 指明配置文件 ) state={present|latest|absent} enablerepo= disablerepo='    
        service模块
          目的：启动指定节点上的 puppet 服务，并让其开机自启动
          命令：ansible 10.1.1.113 -m service -a 'name=puppet state=restartedenabled=yes'
        script模块 
          运行脚本
          ansible all -m script -a '/tmp/a.sh'
        ping模块 
        command模块 
        raw模块 
        get_url模块 
        synchronize模块

      
      
                              






